Exploration du SVM-KNN avec des problèmes de vision  Joon Hyuck Choi (jchoilOO, jchoi100@jhu.edu) Joo Chang Lee (jlee381, jlee381@jhu.edu)  20 novembre 2016  1 Résumé  L&#39;algorithme k-Nearest Neighbor (KNN) est une méthode non paramétrique utilisée pour la classification et régression. Lors d&#39;une précédente tâche, nous avons mis en œuvre le classificateur KNN standard Et une de ses variantes, la distance pondérée KNN. Nous avons ressenti le besoin de Cette affectation et d&#39;explorer un autre type de l&#39;algorithme KNN, qui est un peu plus impliqué.  La variante KNN que nous explorons dans ce travail est l&#39;algorithme SVM-KNN, a&#39;KNN qui fait Utilisation d&#39;un noyau multiclass SVM as&#39;a sous-procédure. L&#39;approche du voisin le plus proche en Les problèmes de reconnaissance ont fait leurs preuves dans le passé [1]. Toutefois, malgré ses avantages, Car l&#39;approche NN peut souffrir d&#39;une forte variation due à l&#39;échantillonnage fini. L&#39;incorporation . D&#39;une SVM peut remédier à cette situation. V  Notons que les deux cas extrêmes du SVM-KNN Sont le KNN standard pour de petites valeurs de K Et la SVM régulière pour K - n. L&#39;algorithme tente d&#39;abord de classer les multiclasses en utilisant Standard KNN avec un système de vote unanime. Lorsque au moins un vote est différent, il Le kernel mutliclass SVM &#39;pour la prédiction. * &#39;  L&#39;utilisation d&#39;une SVM peut être efficace au voisinage d&#39;un petit nombre d&#39;exemples et d&#39;une petite Nombre de classes [1] Nous visons à tester cet algorithme sur deux ensembles de données: MNIST [3] and USPS [4] Les objectifs étendus incluent le test de l&#39;algorithme sur l&#39;ensemble de données Caltech 101 [5], qui Se compose d&#39;images du monde réel plus sophistiquées avec plus d&#39;étiquettes  2 Méthodes  Commençons d&#39;abord notre propre norme KNN avec un vote unanime. En cas de désaccord, utilisez le noyau SVM de scikitlearn avec notre propre métrique de distance comme entrée. Implémentez le noyau Truc fourni en [l] si nécessaire:  1., I &#39;1,&#39;, D (x, 0) + d (y, 0) = 5 (d (x, 0) ), - d (x, y))